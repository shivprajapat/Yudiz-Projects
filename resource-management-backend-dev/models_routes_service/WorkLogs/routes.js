const router = require('express').Router()
const workLogsServices = require('./services')
const { validate, setLanguage, isAuthenticated, isAuthorized } = require('../../middlewares/middleware')
// const validators = require('./validators')

router.use(setLanguage, isAuthenticated)
  .post('/worklogs/v1', setLanguage, isAuthenticated, isAuthorized('CREATE_WORKLOGS'), validate, workLogsServices.addWorkLogs)
  .post('/worklogs/v2', setLanguage, isAuthenticated, isAuthorized('CREATE_WORKLOGS'), validate, workLogsServices.addWorkLogsV2)
  .delete('/worklogs/:id/v1', setLanguage, isAuthenticated, isAuthorized('DELETE_WORKLOGS'), validate, workLogsServices.deleteWorkLogs)
  .delete('/worklogs/:id/v2', setLanguage, isAuthenticated, isAuthorized('DELETE_WORKLOGS'), validate, workLogsServices.deleteWorkLogsV2)
  .get('/worklogs/v1', setLanguage, isAuthenticated, isAuthorized('VIEW_WORKLOGS'), workLogsServices.getWorkLogs)
  .get('/worklogs/v2', setLanguage, isAuthenticated, isAuthorized('VIEW_WORKLOGS'), workLogsServices.getWorkLogsV2)
  .get('/worklogs/:id/v1', setLanguage, isAuthenticated, isAuthorized('VIEW_WORKLOGS'), validate, workLogsServices.getWorkLogsById)
  // .put('/worklogs/:id/v1', setLanguage, isAuthenticated, validate, workLogsServices.updateWorkLogs)
  .put('/worklogs/:id/v2', setLanguage, isAuthenticated, validate, workLogsServices.updateWorkLogsV2)
  .post('/worklogstags/v1', setLanguage, isAuthenticated, isAuthorized('CREATE_WORKLOG_TAGS'), workLogsServices.addWorkLogsTags)
  .get('/worklogstags/v1', setLanguage, isAuthorized('VIEW_WORKLOG_TAGS'), workLogsServices.getWorkLogsTags)
  .delete('/worklogstags/:id/v1', setLanguage, isAuthenticated, isAuthorized('DELETE_WORKLOG_TAGS'), workLogsServices.deleteWorkLogsTags)
  .put('/worklogstags/:id/v1', setLanguage, isAuthenticated, isAuthorized('UPDATE_WORKLOG_TAGS'), workLogsServices.updateWorkLogsTags)
  .get('/test', workLogsServices.test)
module.exports = router
