image: docker:stable
stages:
  - sonar-scanner
  - build_prod
  - build_stag
  - build_dev
  - sportgully-stag
  - sportgully-prod
  # - migrations-dev
  # - migrations-stag
  # - migrations-prod
  # - sportgully-migrations-stag
  # - sportgully-migrations-prod

sonarqube-check:
  stage: sonar-scanner
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true
  allow_failure: true
  only:
    - staging
    #- master
    #- develop

build_prod:
  stage: build_prod
  image: jaydobariya/hs-ci:latest
  services:
    - docker:18.09-dind
  variables:
      DOCKER_HOST: tcp://localhost:2375
      DOCKER_DRIVER: overlay2
  before_script:
    - export VERIFY_CHECKSUM=false
    - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    - chmod 700 get_helm.sh
    - ./get_helm.sh
    # - aws eks --region ap-south-1 update-kubeconfig --name Fantasy
    - aws eks --region ap-south-1 update-kubeconfig --name Fansportiz
    - helm repo add --username yudiz_AmanM --password 35xYz5xqobP5xQFgAnqQ project-1 https://gitlab.com/api/v4/projects/28916807/packages/helm/stable
    - helm repo update
    - aws s3 cp s3://fantasy-firebase-sdk/fantasy-prod-sdk/firebase-sdk.json ./helper/third-party-cred/ 
  script:
    #deploy
    - docker build -t fantasy-node-backend:$CI_COMMIT_SHA .
    - docker tag fantasy-node-backend:$CI_COMMIT_SHA 352650027354.dkr.ecr.ap-south-1.amazonaws.com/fantasy-node-backend:$CI_COMMIT_SHA
    # - docker login dockerregistry.fantasywl.tk --username admin --password admin123
    - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 352650027354.dkr.ecr.ap-south-1.amazonaws.com
    - docker push 352650027354.dkr.ecr.ap-south-1.amazonaws.com/fantasy-node-backend:$CI_COMMIT_SHA
    - helm upgrade -n production fantasy-node-backend project-1/fantasy-node-backend --set=image=352650027354.dkr.ecr.ap-south-1.amazonaws.com/fantasy-node-backend:$CI_COMMIT_SHA
  when: manual
  only:
    - master


build_stag:
  stage: build_stag
  image: jaydobariya/hs-ci:latest
  services:
    - docker:18.09-dind
  variables:
      DOCKER_HOST: tcp://localhost:2375
      DOCKER_DRIVER: overlay2
  before_script:
    - export VERIFY_CHECKSUM=false
    - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    - chmod 700 get_helm.sh
    - ./get_helm.sh
    # - aws eks --region ap-south-1 update-kubeconfig --name Fantasy
    - aws eks --region ap-south-1 update-kubeconfig --name Fansportiz
    - helm repo add --username yudiz_AmanM --password 35xYz5xqobP5xQFgAnqQ project-1 https://gitlab.com/api/v4/projects/28916807/packages/helm/stable
    - helm repo update
    - aws s3 cp s3://fantasy-firebase-sdk/fantasy-stag-sdk/firebase-sdk.json ./helper/third-party-cred/
  script:
    #deploy
    - docker build -t fantasy-node-backend-staging:$CI_COMMIT_SHA .
    - docker tag fantasy-node-backend-staging:$CI_COMMIT_SHA 352650027354.dkr.ecr.ap-south-1.amazonaws.com/fantasy-node-backend-staging:$CI_COMMIT_SHA
    - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 352650027354.dkr.ecr.ap-south-1.amazonaws.com
    - docker push 352650027354.dkr.ecr.ap-south-1.amazonaws.com/fantasy-node-backend-staging:$CI_COMMIT_SHA
    - helm upgrade -n default fantasy-node-backend-stag project-1/fantasy-node-backend-staging --set=image=352650027354.dkr.ecr.ap-south-1.amazonaws.com/fantasy-node-backend-staging:$CI_COMMIT_SHA
  only:
    - staging


build_dev:
  stage: build_dev
  image: jaydobariya/hs-ci:latest
  services:
    - docker:18.09-dind
  variables:
      DOCKER_HOST: tcp://localhost:2375
      DOCKER_DRIVER: overlay2
  before_script:
    - export VERIFY_CHECKSUM=false
    - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    - chmod 700 get_helm.sh
    - ./get_helm.sh
    # - aws eks --region ap-south-1 update-kubeconfig --name Fantasy
    - aws eks --region ap-south-1 update-kubeconfig --name Fansportiz
    - helm repo add --username yudiz_AmanM --password 35xYz5xqobP5xQFgAnqQ project-1 https://gitlab.com/api/v4/projects/28916807/packages/helm/stable
    - helm repo update
    - aws s3 cp s3://fantasy-firebase-sdk/fantasy-dev-sdk/firebase-sdk.json ./helper/third-party-cred/ 
  script:
    #deploy
    - docker build -t fantasy-node-backend-dev:$CI_COMMIT_SHA .
    - docker tag fantasy-node-backend-dev:$CI_COMMIT_SHA 352650027354.dkr.ecr.ap-south-1.amazonaws.com/fantasy-node-backend-dev:$CI_COMMIT_SHA
    # - docker login dockerregistry.fantasywl.tk --username admin --password admin123
    - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 352650027354.dkr.ecr.ap-south-1.amazonaws.com
    - docker push 352650027354.dkr.ecr.ap-south-1.amazonaws.com/fantasy-node-backend-dev:$CI_COMMIT_SHA
    - helm upgrade -n default fantasy-node-backend-dev project-1/fantasy-node-backend-dev --set=image=352650027354.dkr.ecr.ap-south-1.amazonaws.com/fantasy-node-backend-dev:$CI_COMMIT_SHA
  only:
    - dev

sportgully-stag :
  stage: sportgully-stag 
  image: jaydobariya/hs-ci:latest
  services:
    - docker:18.09-dind
  variables:
      DOCKER_HOST: tcp://localhost:2375
      DOCKER_DRIVER: overlay2
  before_script:
    - export AWS_ACCESS_KEY_ID=$SPORTGULLY_AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$SPORTGULLY_AWS_SECRET_ACCESS_KEY
    - export AWS_DEFAULT_REGION=$SPORTGULLY_AWS_DEFAULT_REGION
    - export VERIFY_CHECKSUM=false
    - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    - chmod 700 get_helm.sh
    - ./get_helm.sh
    # - aws eks --region ap-south-1 update-kubeconfig --name Fantasy
    # - aws eks --region ap-south-1 update-kubeconfig --name Fansportiz
    - aws eks --region ap-south-1 update-kubeconfig --name sportgully
    - helm repo add --username yudiz_AmanM --password 35xYz5xqobP5xQFgAnqQ project-1 https://gitlab.com/api/v4/projects/28916807/packages/helm/stable
    - helm repo update
    - aws s3 cp s3://sportgully-firebase-sdk-1638949745/sportgully-stag-sdk/firebase-sdk.json ./helper/third-party-cred/ 
  script:
    #deploy
    - docker build -t sportgully-node-backend-stag:$CI_COMMIT_SHA .
    - docker tag sportgully-node-backend-stag:$CI_COMMIT_SHA 818619633648.dkr.ecr.ap-south-1.amazonaws.com/sportgully-node-backend-stag:$CI_COMMIT_SHA
    - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 818619633648.dkr.ecr.ap-south-1.amazonaws.com
    - docker push 818619633648.dkr.ecr.ap-south-1.amazonaws.com/sportgully-node-backend-stag:$CI_COMMIT_SHA
    - helm upgrade -n staging sportgully-node-backend-stag project-1/sportgully-node-backend-stag --set=image=818619633648.dkr.ecr.ap-south-1.amazonaws.com/sportgully-node-backend-stag:$CI_COMMIT_SHA
  only:
    - sportgully-stag

sportgully-prod:
  stage: sportgully-prod
  image: jaydobariya/hs-ci:latest
  services:
    - docker:18.09-dind
  variables:
      DOCKER_HOST: tcp://localhost:2375
      DOCKER_DRIVER: overlay2
  before_script:
    - export AWS_ACCESS_KEY_ID=$SPORTGULLY_AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$SPORTGULLY_AWS_SECRET_ACCESS_KEY
    - export AWS_DEFAULT_REGION=$SPORTGULLY_AWS_DEFAULT_REGION
    - export VERIFY_CHECKSUM=false
    - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    - chmod 700 get_helm.sh
    - ./get_helm.sh
    # - aws eks --region ap-south-1 update-kubeconfig --name Fantasy
    # - aws eks --region ap-south-1 update-kubeconfig --name Fansportiz
    - aws eks --region ap-south-1 update-kubeconfig --name sportgully
    - helm repo add --username yudiz_AmanM --password 35xYz5xqobP5xQFgAnqQ project-1 https://gitlab.com/api/v4/projects/28916807/packages/helm/stable
    - helm repo update
    - aws s3 cp s3://sportgully-firebase-sdk-1638949745/sportgully-prod-sdk/firebase-sdk.json ./helper/third-party-cred/
  script:
    #deploy
    - docker build -t sportgully-node-backend:$CI_COMMIT_SHA .
    - docker tag sportgully-node-backend:$CI_COMMIT_SHA 818619633648.dkr.ecr.ap-south-1.amazonaws.com/sportgully-node-backend:$CI_COMMIT_SHA
    # - docker login dockerregistry.fantasywl.tk --username admin --password admin123
    - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 818619633648.dkr.ecr.ap-south-1.amazonaws.com
    - docker push 818619633648.dkr.ecr.ap-south-1.amazonaws.com/sportgully-node-backend:$CI_COMMIT_SHA
    - helm upgrade -n production sportgully-node-backend project-1/sportgully-node-backend --set=image=818619633648.dkr.ecr.ap-south-1.amazonaws.com/sportgully-node-backend:$CI_COMMIT_SHA
    - curl https://bat066gabl.execute-api.ap-south-1.amazonaws.com/CDNinvalidation
  when: manual
  only:
    - sportgully-prod

# migrations-dev:
#   stage: migrations-dev
#   image: node:16.14
#   script:
#     - npm install sequelize-cli
#     - npx sequelize-cli db:migrate
#   only:
#     - dev

# migrations-stag:
#   stage: migrations-stag
#   image: node:16.14
#   script:
#     - npm install sequelize-cli
#     - npx sequelize-cli db:migrate
#   only:
#     - staging

# migrations-prod:
#   stage: migrations-prod
#   image: node:16.14
#   script:
#     - npm install sequelize-cli
#     - npx sequelize-cli db:migrate
#   only:
#     - prod

# sportgully-migrations-stag:
#   stage: sportgully-migrations-stag
#   image: node:16.14
#   script:
#     - npm install sequelize-cli
#     - npx sequelize-cli db:migrate
#   only:
#     - sportgully-stag

# sportgully-migrations-prod:
#   stage: sportgully-migrations-prod
#   image: node:16.14
#   script:
#     - npm install sequelize-cli
#     - npx sequelize-cli db:migrate
#   only:
#     - sportgully-prod
